@using Microsoft.AspNetCore.Rewrite.Internal
@model iTest.Web.Areas.Admin.Models.CreateTestViewModel
@{
    ViewData["Title"] = "CreateTest";
}
<h1>New Test</h1>
<form method="post" id="form-test">
    <div class="form-row">
        <div class="form-group col-md-6">
            <label asp-for="Name">Test name</label>
            <input type="text" class="form-control" id="inputName">
        </div>
        <div class="form-group col-md-2">
            <label asp-for="RequestedTime">Requested Тime</label>
            <input type="text" class="form-control" id="inputTime">
        </div>
        <div class="form-group col-md-4">
            <label asp-for="Category">Category</label>
            <select asp-for="Category" asp-items="Model.Categories" class="form-control"></select>
            <div>
                <button type="button" id="new-question-button" class="btn btn-primary pull-right">Add Question</button>
            </div>
        </div>
        <div id="question-container" class="accordion"></div>
        <div class="save-buttons pull-right">
            <button type="submit" id="save-draft" class="btn btn-primary submit">Save As Draft</button>
            <button type="submit" id="publish" class="btn btn-primary submit">Publish</button>
        </div>
        
        <div class="slavi"></div>
    </div>
</form>


@section Scripts{
<script>
        $(function () {
            $("#question-container").on("click", ".new-answer-button", function () { // add answer
                var btn = $(this);

                $.get("/Admin/ManageTest/CreateAnswer", function (data) {
                    var answerDiv = $("<div/>")
                        .addClass("answer");
                    answerDiv.html(data);
                    btn.parents(".question-container")
                        .find(".question")
                        .append(answerDiv);
                });
            });
            var counter = 0;

            $("#new-question-button").click(function () {
                $.get("/Admin/ManageTest/CreateQuestion", function (data) {

                    var questionDiv = $("<div/>")
                        .addClass('question');
                    questionDiv.html(data);
                    var questionHeader = questionDiv.find(".question-count");
                    counter = counter + 1;
                    questionHeader.text("Question " + counter);
                    $("#question-container").append(questionDiv);
                });
            });
        });


        $('.summernote').summernote({
            placeholder: 'Hello stand alone ui',
            tabsize: 2,
            height: 200,
            toolbar: [
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['font', ['strikethrough', 'superscript', 'subscript']],
                ['fontsize', ['fontsize']],
                ['para', ['ul', 'ol', 'paragraph']]
            ],
            disableResizeEditor: true
        });

        $("#publish, #save-draft").on("click", function (ev) {
            ev.preventDefault();
            var questions = [];
            console.log(ev.target.id);


            //    //console.log(submissionButton.attr("id"));
            //    //var submissionButtonDraft = $("#save-draft").on("click", (function () {
            //    //    return $(this).attr("id");
            //    //}));
            //    //console.log(submissionButtonDraft.attr("id"));



            $(".form-group.question")
                .each(function (index, questionContainer) {
                    var question = $(questionContainer)
                        .find(".form-control.question")

                    var answers = []
                    $(questionContainer)
                        .find(".answer-container")
                        .each(function (index, answerContainer) {
                            var answer = $(answerContainer).find(".answer").val();
                            var isCorrect = $(answerContainer).find(".answer-is-correct:checked").length > 0;

                            answers.push({
                                Content: answer,
                                IsCorrect: isCorrect,
                            });
                        });

                    questions.push({
                        Content: question.val(),
                        Answers: answers
                    });
                });
            var category = $("#inputCategory").find(":selected").text();
            console.log(category);
            var data = {
                Name: $("#inputName").val(),
                Category: category,
                RequestedTime: $("#inputTime").val(),
                IsPublished: ev.target.id === 'publish',
                Questions: questions
            };

            //$.post("/Admin/ManageTest/SaveTest", data);

            @*$.ajax({
                url:'@Url.Action("SaveTest","ManageTest")',
                type: 'POST',
                data: data,
                dataType: 'json',
                success: function (data) {
                    console(data);
                }
            });*@

            $.ajax({
                url: '@Url.Action("SaveTest","ManageTest")',
                type: 'POST',
                data: JSON.stringify(data),
                contentType: 'application/json; charset=utf-8',
                dataType: 'html',
                success: function (data) {
                    $('.slavi').html(data);
                    console.log('mai bind-na');
                }
            });
            
            //    return false;
        });

</script>
}